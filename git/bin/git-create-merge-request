#!/bin/bash

usage() {
    cat <<EOF
$(basename $0): [-b branch]

Create a merge request and link to the JIRA ticket for the provided branch if specified else
current checked out branch.

  -b branch_name    The name of the branch to create a request
  -t target_branch  The name of the branch to merge into
  -h                display this help
EOF
}

while getopts "b:t:h" arg; do
  case $arg in
    b) branch="$OPTARG" ;;
    t) target="$OPTARG" ;;
    h) usage; exit 1; ;;
  esac
done

shift $((OPTIND -1))

if [[ -z "$branch" ]]; then
  branch="$(git rev-parse --abbrev-ref HEAD)"
else
  branch="$(git find-branch -s "$1")"
fi

default_merge_branch="$(echo "$branch" | cut -d '-' -f1-3)"
project="$(git config --get config.merge-request.project)"
if [[ -z "$project" ]]; then
  project=$(git config --get remote.origin.url | grep gitlab | cut -d':' -f2 | sed -e 's/\.git//')
fi

if [[ -z "$target" ]]; then
  branch_target="$(git config --get "branch.$branch.merge-request.target")"

  if [[ -n "$branch_target" ]]; then
    target="$branch_target"
  else
    project_target="$(git config --get config.merge-request.target)"
    target="$(git config --get config.merge-request.target)"
  fi
fi

merge_branch="$(git config --get --default "$default_merge_branch" "branch.$branch.merge-request.branch")"

create-merge-request --branch "$merge_branch" \
  $(test -n "$project" && echo "--project $project") \
  $(test -n "$target" && echo "--target $target") \
  "$@"
