# vim: ft=sh

vimfind() {
  vim $(find "$@")
}

vimgitgrep() {
  vim $(git grep -l "$@")
}

gcd() {
  local gitroot=$(git rev-parse --show-toplevel)

  if [[ ! -d "$gitroot" ]]; then
    echo "ERROR: Not in a Git directory. Use 'cd' instead." >&2
    return
  fi

  cd ${gitroot}/$1
}

jboss_select() {
  : ${JBOSS_INSTALL_DIR:=$HOME/.local/opt}
  options=($(find $JBOSS_INSTALL_DIR  -maxdepth 1 \( -name "jboss*" -o -name "wildfly*" \) \( -type l \) | sort ) $(find $JBOSS_INSTALL_DIR  -maxdepth 1 \( -name "jboss*" -o -name "wildfly*" \) \( -type d \) | sort))

  PS3="Select the JBoss instance to use: "
  select opt in "${options[@]}"; do
    if [[ -n "$opt" ]]; then
      export JBOSS_HOME="$opt"
      echo "JBOSS_HOME=$JBOSS_HOME"
      break
    fi
  done
}

# Subversion {{{
sd() {
  svn diff "$@" | cdiff
}

sl() {
  svn log "$@" | less
}

svn_branch() {
  svn info | grep -E "^URL" | cut -d' ' -f2
}

# Extremely hacky 'stash' for subversion by renaming files to a suffix that should not be tracked.
svn_stash() {
  svn status -q | grep -E "^M" | awk '{print $2; }' | while read f; do
    cp -p "$f" "$f.stashed" && svn revert "$f"
  done
}

svn_stash_pop() {
  svn status | grep -E "\.stashed" | awk '{print $2; }' | while read f; do
    mv "$f" "$(dirname $f)/$(basename $f .stashed)"
  done
}

# Extremely hacky 'index' for subversion by renaming files
svn_save() {
  svn status -q | grep -E "^M" | awk '{print $2; }' | while read f; do
    cp -p "$f" "$f.saved"
  done
}

svn_save_clean() {
  svn status | grep -E "\.saved" | awk '{print $2; }' | while read f; do
    rm "$f"
  done
}

svn_save_revert() {
  svn status | grep -E "\.saved" | awk '{print $2; }' | while read f; do
    mv "$f" "$(dirname $f)/$(basename $f .saved)"
  done
}

svn_list_my_branches() {
    svn ls ${1:-https://subversion/svn/work/dev} | grep briehman | sort
}
# }}}
